variant: fcos
version: 1.4.0
passwd:
  users:
    - name: ${USERNAME}
      ssh_authorized_keys:
        - ${SSH_PUB_KEY}
      password_hash: ${PASSWD_HASH}
kernel_arguments:
  should_exist:
    - "crashkernel=300M"
systemd:
  units:
    - name: kdump.service
      enabled: true
    # To install `cockpit-*` packages by `rpm-ostree`.
    # In the future, It will will have a more Ignition-friendly method of doing this
    # with stronger guarantees.
    # See: https://github.com/coreos/fedora-coreos-tracker/issues/681
    - name: rpm-ostree-install-cockpit.service
      enabled: true
      contents: |
        [Unit]
        Description=Layer cockpit-* with rpm-ostree
        Wants=network-online.target
        After=network-online.target
        # We run before `zincati.service` to avoid conflicting rpm-ostree transactions.
        Before=zincati.service
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        # `--allow-inactive` ensures that rpm-ostree does not return an error if
        # the package is already installed. This is useful if the package is added
        # to the root image in a future Fedora CoreOS release as it will prevent
        # the service from failing.
        ExecStart=/usr/bin/rpm-ostree install --apply-live --allow-inactive cockpit-system cockpit-storaged cockpit-networkmanager cockpit-ostree cockpit-machines cockpit-podman cockpit-selinux cockpit-kdump cockpit-sosreport
        ExecStart=/bin/touch /var/lib/%N.stamp

        [Install]
        WantedBy=multi-user.target
    - name: cockpit.service
      enabled: true
      contents: |
        [Unit]
        Description=quay.io/cockpit/ws:latest podman container
        Wants=rpm-ostree-install-cockpit.service
        After=rpm-ostree-install-cockpit.service

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStartPre=-/bin/podman rm -f cockpit-ws
        ExecStart=/usr/bin/podman container runlabel --name cockpit-ws RUN quay.io/cockpit/ws:latest
        ExecStop=/usr/bin/podman rm -f cockpit-ws
        Restart=on-failure
        RestartSec=5s
        KillMode=none

        [Install]
        WantedBy=multi-user.target
storage:
  files:
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: nas
    - path: /etc/fstab
      mode: 0644
      contents:
        inline: |
          # Fedora CoreOS uses systemd.mount to manage mounts by default, but it is
          # undeniable that `/etc/fstab` is still widely used. Especially it is very
          # intuitive for human beings.

          # <device>                                <dir> <type> <options> <dump> <fsck>
    - path: /etc/ssh/sshd_config.d/20-enable-passwords.conf
      mode: 0644
      contents:
        inline: |
          # Fedora CoreOS disables SSH password login by default.
          # Re-enable it.
          # This file must sort before `04-disable-passwords.conf`.
          PasswordAuthentication yes
    - path: /etc/sudoers.d/coreos-${USERNAME}-user
      mode: 0440
      contents:
        inline: |
          # Allow user ${USERNAME} to use sudo with their own password.
          ${USERNAME} ALL=(ALL) ALL
    - path: /etc/systemd/resolved.conf.d/20-enable-mdns.conf
      mode: 0644
      contents:
        inline: |
          # Enable the systemd-resolved as a Multicast DNS resolver and responder.
          [Resolve]
          MulticastDNS=yes
    - path: /etc/NetworkManager/conf.d/20-enable-mdns.conf
      mode: 0644
      contents:
        inline: |
          # Make sure that NetworkManager enables the Multicast DNS for any connection.
          [connection]
          connection.mdns=2
    - path: /etc/systemd/zram-generator.conf.d/zz-enable-zram.conf
      mode: 0644
      contents:
        inline: |
          # Enable a `/dev/zram0` device.
          [zram0]
